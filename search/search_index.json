{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"DB-Notes SQL -->What is SQL -- Structured query language (SQL) is a programming language for storing and processing information in a relational database. A relational database stores information in tabular form, with rows and columns representing different data attributes and the various relationships between the data values. You can use SQL statements to store, update, remove, search, and retrieve information from the database. You can also use SQL to maintain and optimize database performance. Some of The Most Important SQL Commands SELECT ( extracts data from a database )<br /> UPDATE ( updates data in a database ) <br /> DELETE ( deletes data from a database ) <br /> INSERT INTO () inserts new data into a database _<br /> CREATE DATABASE (- creates a new database ) <br /> ALTER DATABASE ( modifies a database) <br /> CREATE TABLE (creates a new table ) <br /> ALTER TABLE - modifies a table<br /> DROP TABLE - deletes a table<br /> CREATE INDEX - creates an index (search key)<br /> DROP INDEX - deletes an index<br /> Pages Link-for-Learn-SQL Link-for-SQL-Learning-Resources SQL-Commands Guides General-Learning-Resources Link-to-SQLShack Labs/Practice SQL using free learning labs Link-to-W3-Schools Link-to-SQL-HackerRack MongoDB MongoDB example-table example-table","title":"Home"},{"location":"#db-notes","text":"","title":"DB-Notes"},{"location":"#sql","text":"-->What is SQL -- Structured query language (SQL) is a programming language for storing and processing information in a relational database. A relational database stores information in tabular form, with rows and columns representing different data attributes and the various relationships between the data values. You can use SQL statements to store, update, remove, search, and retrieve information from the database. You can also use SQL to maintain and optimize database performance.","title":"SQL"},{"location":"#some-of-the-most-important-sql-commands","text":"SELECT ( extracts data from a database )<br /> UPDATE ( updates data in a database ) <br /> DELETE ( deletes data from a database ) <br /> INSERT INTO () inserts new data into a database _<br /> CREATE DATABASE (- creates a new database ) <br /> ALTER DATABASE ( modifies a database) <br /> CREATE TABLE (creates a new table ) <br /> ALTER TABLE - modifies a table<br /> DROP TABLE - deletes a table<br /> CREATE INDEX - creates an index (search key)<br /> DROP INDEX - deletes an index<br />","title":"Some of The Most Important SQL Commands"},{"location":"#pages","text":"Link-for-Learn-SQL Link-for-SQL-Learning-Resources SQL-Commands","title":"Pages"},{"location":"#guides","text":"","title":"Guides"},{"location":"#general-learning-resources","text":"Link-to-SQLShack","title":"General-Learning-Resources"},{"location":"#labspractice-sql-using-free-learning-labs","text":"Link-to-W3-Schools Link-to-SQL-HackerRack","title":"Labs/Practice SQL using free learning labs"},{"location":"#mongodb","text":"MongoDB","title":"MongoDB"},{"location":"#example-table","text":"example-table","title":"example-table"},{"location":"mongodb/learn-mongodb/","text":"MongoDB Docs","title":"Learn-MongoDB"},{"location":"mongodb/learn-mongodb/#mongodb-docs","text":"","title":"MongoDB Docs"},{"location":"sql/example-table/","text":"CustomerID CustomerName ContactName Address City PostalCode Country 1 Alfreds Futterkiste Maria Anders Obere Str. 57 Berlin 12209 Germany 2 Ana Trujillo Emparedados y helados Ana Trujillo Avda. de la Constituci\u00f3n 2222 M\u00e9xicoDF 05021 Mexico 3 Antonio Moreno Taquer\u00eda Antonio Moreno Mataderos 2312 M\u00e9xico D.F. 05023 Mexico 4 Around the Horn Thomas Hardy 120 Hanover Sq. London WA1 1DP UK 5 Berglunds snabbk\u00f6p Christina Berglund Berguvsv\u00e4gen 8 Lule\u00e5 S-958 22 Sweden","title":"Example-table"},{"location":"sql/learn-sql/","text":"SQL Docs What is SQL Structured query language (SQL) is a programming language for storing and processing information in a relational database. A relational database stores information in tabular form, with rows and columns representing different data attributes and the various relationships between the data values. You can use SQL statements to store, update, remove, search, and retrieve information from the database. You can also use SQL to maintain and optimize database performance. What are the components of a SQL system? Relational database management systems use structured query language (SQL) to store and manage data. The system stores multiple database tables that relate to each other. MS SQL Server, MySQL, or MS Access are examples of relational database management systems. The following are the components of such a system. SQL table A SQL table is the basic element of a relational database. The SQL database table consists of rows and columns. Database engineers create relationships between multiple database tables to optimize data storage space. For example, the database engineer creates a SQL table for products in a store: Product ID Product Name Color ID 0001 Mattress Color 1 0002 Pillow Color 2 Then the database engineer links the product table to the color table with the Color ID: Color ID Color Name Color 1 Blue Color 2 Red SQL statements SQL statements, or SQL queries, are valid instructions that relational database management systems understand. Software developers build SQL statements by using different SQL language elements. SQL language elements are components such as identifiers, variables, and search conditions that form a correct SQL statement. For example, the following SQL statement uses a SQL INSERT command to store Mattress Brand A, priced $499, into a table named Mattress_table, with column names brand_name and cost: INSERT INTO Mattress_table (brand_name, cost) VALUES(\u2018A\u2019,\u2019499\u2019); Stored procedures Stored procedures are a collection of one or more SQL statements stored in the relational database. Software developers use stored procedures to improve efficiency and performance. For example, they can create a stored procedure for updating sales tables instead of writing the same SQL statement in different applications. How does SQL work? Structured query language (SQL) implementation involves a server machine that processes the database queries and returns the results. The SQL process goes through several software components, including the following. Parser The parser starts by tokenizing, or replacing, some of the words in the SQL statement with special symbols. It then checks the statement for the following: Correctness The parser verifies that the SQL statement conforms to SQL semantics, or rules, that ensure the correctness of the query statement. For example, the parser checks if the SQL command ends with a semi-colon. If the semi-colon is missing, the parser returns an error. Authorization The parser also validates that the user running the query has the necessary authorization to manipulate the respective data. For example, only admin users might have the right to delete data. Relational engine The relational engine, or query processor, creates a plan for retrieving, writing, or updating the corresponding data in the most effective manner. For example, it checks for similar queries, reuses previous data manipulation methods, or creates a new one. It writes the plan in an intermediate-level representation of the SQL statement called byte code. Relational databases use byte code to efficiently perform database searches and modifications. Storage engine The storage engine, or database engine, is the software component that processes the byte code and runs the intended SQL statement. It reads and stores the data in the database files on physical disk storage. Upon completion, the storage engine returns the result to the requesting application. What are SQL commands? Structured query language (SQL) commands are specific keywords or SQL statements that developers use to manipulate the data stored in a relational database. You can categorize SQL commands as follows. Data definition language Data definition language (DDL) refers to SQL commands that design the database structure. Database engineers use DDL to create and modify database objects based on the business requirements. For example, the database engineer uses the CREATE command to create database objects such as tables, views, and indexes. Data query language Data query language (DQL) consists of instructions for retrieving data stored in relational databases. Software applications use the SELECT command to filter and return specific results from a SQL table. Data manipulation language Data manipulation language (DML) statements write new information or modify existing records in a relational database. For example, an application uses the INSERT command to store a new record in the database. Data control language Database administrators use data control language (DCL) to manage or authorize database access for other users. For example, they can use the GRANT command to permit certain applications to manipulate one or more tables. Transaction control language The relational engine uses transaction control language (TCL) to automatically make database changes. For example, the database uses the ROLLBACK command to undo an erroneous transaction. What is MySQL? MySQL is an open-source relational database management system offered by Oracle. Developers can download and use MySQL without paying a licensing fee. They can install MySQL on different operating systems or cloud servers. MySQL is a popular database system for web applications. SQL vs. MySQL Structured query language (SQL) is a standard language for database creation and manipulation. MySQL is a relational database program that uses SQL queries. While SQL commands are defined by international standards, the MySQL software undergoes continual upgrades and improvements. How to get started with SQL What is a SQL server? SQL Server is the official name of Microsoft's relational database management system that manipulates data with SQL. The MS SQL Server has several editions, and each is designed for specific workloads and requirements. example-table example-table","title":"Learn-SQL"},{"location":"sql/learn-sql/#sql-docs","text":"","title":"SQL Docs"},{"location":"sql/learn-sql/#what-is-sql","text":"Structured query language (SQL) is a programming language for storing and processing information in a relational database. A relational database stores information in tabular form, with rows and columns representing different data attributes and the various relationships between the data values. You can use SQL statements to store, update, remove, search, and retrieve information from the database. You can also use SQL to maintain and optimize database performance.","title":"What is SQL"},{"location":"sql/learn-sql/#what-are-the-components-of-a-sql-system","text":"Relational database management systems use structured query language (SQL) to store and manage data. The system stores multiple database tables that relate to each other. MS SQL Server, MySQL, or MS Access are examples of relational database management systems. The following are the components of such a system.","title":"What are the components of a SQL system?"},{"location":"sql/learn-sql/#sql-table","text":"A SQL table is the basic element of a relational database. The SQL database table consists of rows and columns. Database engineers create relationships between multiple database tables to optimize data storage space. For example, the database engineer creates a SQL table for products in a store: Product ID Product Name Color ID 0001 Mattress Color 1 0002 Pillow Color 2 Then the database engineer links the product table to the color table with the Color ID: Color ID Color Name Color 1 Blue Color 2 Red","title":"SQL table"},{"location":"sql/learn-sql/#sql-statements","text":"SQL statements, or SQL queries, are valid instructions that relational database management systems understand. Software developers build SQL statements by using different SQL language elements. SQL language elements are components such as identifiers, variables, and search conditions that form a correct SQL statement. For example, the following SQL statement uses a SQL INSERT command to store Mattress Brand A, priced $499, into a table named Mattress_table, with column names brand_name and cost: INSERT INTO Mattress_table (brand_name, cost) VALUES(\u2018A\u2019,\u2019499\u2019);","title":"SQL statements"},{"location":"sql/learn-sql/#stored-procedures","text":"Stored procedures are a collection of one or more SQL statements stored in the relational database. Software developers use stored procedures to improve efficiency and performance. For example, they can create a stored procedure for updating sales tables instead of writing the same SQL statement in different applications.","title":"Stored procedures"},{"location":"sql/learn-sql/#how-does-sql-work","text":"Structured query language (SQL) implementation involves a server machine that processes the database queries and returns the results. The SQL process goes through several software components, including the following.","title":"How does SQL work?"},{"location":"sql/learn-sql/#parser","text":"The parser starts by tokenizing, or replacing, some of the words in the SQL statement with special symbols. It then checks the statement for the following:","title":"Parser"},{"location":"sql/learn-sql/#correctness","text":"The parser verifies that the SQL statement conforms to SQL semantics, or rules, that ensure the correctness of the query statement. For example, the parser checks if the SQL command ends with a semi-colon. If the semi-colon is missing, the parser returns an error.","title":"Correctness"},{"location":"sql/learn-sql/#authorization","text":"The parser also validates that the user running the query has the necessary authorization to manipulate the respective data. For example, only admin users might have the right to delete data.","title":"Authorization"},{"location":"sql/learn-sql/#relational-engine","text":"The relational engine, or query processor, creates a plan for retrieving, writing, or updating the corresponding data in the most effective manner. For example, it checks for similar queries, reuses previous data manipulation methods, or creates a new one. It writes the plan in an intermediate-level representation of the SQL statement called byte code. Relational databases use byte code to efficiently perform database searches and modifications.","title":"Relational engine"},{"location":"sql/learn-sql/#storage-engine","text":"The storage engine, or database engine, is the software component that processes the byte code and runs the intended SQL statement. It reads and stores the data in the database files on physical disk storage. Upon completion, the storage engine returns the result to the requesting application.","title":"Storage engine"},{"location":"sql/learn-sql/#what-are-sql-commands","text":"Structured query language (SQL) commands are specific keywords or SQL statements that developers use to manipulate the data stored in a relational database. You can categorize SQL commands as follows.","title":"What are SQL commands?"},{"location":"sql/learn-sql/#data-definition-language","text":"Data definition language (DDL) refers to SQL commands that design the database structure. Database engineers use DDL to create and modify database objects based on the business requirements. For example, the database engineer uses the CREATE command to create database objects such as tables, views, and indexes.","title":"Data definition language"},{"location":"sql/learn-sql/#data-query-language","text":"Data query language (DQL) consists of instructions for retrieving data stored in relational databases. Software applications use the SELECT command to filter and return specific results from a SQL table.","title":"Data query language"},{"location":"sql/learn-sql/#data-manipulation-language","text":"Data manipulation language (DML) statements write new information or modify existing records in a relational database. For example, an application uses the INSERT command to store a new record in the database.","title":"Data manipulation language"},{"location":"sql/learn-sql/#data-control-language","text":"Database administrators use data control language (DCL) to manage or authorize database access for other users. For example, they can use the GRANT command to permit certain applications to manipulate one or more tables.","title":"Data control language"},{"location":"sql/learn-sql/#transaction-control-language","text":"The relational engine uses transaction control language (TCL) to automatically make database changes. For example, the database uses the ROLLBACK command to undo an erroneous transaction.","title":"Transaction control language"},{"location":"sql/learn-sql/#what-is-mysql","text":"MySQL is an open-source relational database management system offered by Oracle. Developers can download and use MySQL without paying a licensing fee. They can install MySQL on different operating systems or cloud servers. MySQL is a popular database system for web applications. SQL vs. MySQL Structured query language (SQL) is a standard language for database creation and manipulation. MySQL is a relational database program that uses SQL queries. While SQL commands are defined by international standards, the MySQL software undergoes continual upgrades and improvements.","title":"What is MySQL?"},{"location":"sql/learn-sql/#how-to-get-started-with-sql","text":"","title":"How to get started with SQL"},{"location":"sql/learn-sql/#what-is-a-sql-server","text":"SQL Server is the official name of Microsoft's relational database management system that manipulates data with SQL. The MS SQL Server has several editions, and each is designed for specific workloads and requirements.","title":"What is a SQL server?"},{"location":"sql/learn-sql/#example-table","text":"example-table","title":"example-table"},{"location":"sql/learning-resources/","text":"List of Learning Resources for SQL Practice SQL using labs W3-Schools SQL-HackerRack DataLemur SQLBot StrataScratch Guides/Example Queries SQLShack","title":"SQL-Learning-Resources"},{"location":"sql/learning-resources/#list-of-learning-resources-for-sql","text":"","title":"List of Learning Resources for SQL"},{"location":"sql/learning-resources/#practice-sql-using-labs","text":"W3-Schools SQL-HackerRack DataLemur SQLBot StrataScratch","title":"Practice SQL using labs"},{"location":"sql/learning-resources/#guidesexample-queries","text":"SQLShack","title":"Guides/Example Queries"},{"location":"sql/sql-commands/","text":"Some of The Most Important SQL Commands SELECT - extracts data from a database UPDATE - updates data in a database DELETE - deletes data from a database INSERT INTO - inserts new data into a database CREATE DATABASE - creates a new database ALTER DATABASE - modifies a database CREATE TABLE - creates a new table ALTER TABLE - modifies a table DROP TABLE - deletes a table CREATE INDEX - creates an index (search key) DROP INDEX - deletes an index","title":"SQL-COMMANDS"},{"location":"sql/sql-commands/#some-of-the-most-important-sql-commands","text":"SELECT - extracts data from a database UPDATE - updates data in a database DELETE - deletes data from a database INSERT INTO - inserts new data into a database CREATE DATABASE - creates a new database ALTER DATABASE - modifies a database CREATE TABLE - creates a new table ALTER TABLE - modifies a table DROP TABLE - deletes a table CREATE INDEX - creates an index (search key) DROP INDEX - deletes an index","title":"Some of The Most Important SQL Commands"}]}